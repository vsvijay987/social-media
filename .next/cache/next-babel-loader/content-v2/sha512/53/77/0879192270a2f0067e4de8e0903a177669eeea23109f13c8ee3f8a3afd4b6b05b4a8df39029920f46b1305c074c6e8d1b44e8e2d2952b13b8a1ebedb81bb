{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\vsvij\\\\Desktop\\\\MERN Projects\\\\social-media\\\\pages\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport baseUrl from \"../utils/baseUrl\";\nimport CreatePost from \"../components/Post/CreatePost\";\nimport CardPost from \"../components/Post/CardPost\";\nimport { Segment } from \"semantic-ui-react\";\nimport { parseCookies } from \"nookies\";\nimport { NoPosts } from \"../components/Layout/NoData\";\nimport { PostDeleteToastr } from \"../components/Layout/Toastr\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { PlaceHolderPosts, EndMessage } from \"../components/Layout/PlaceHolderGroup\";\nimport cookie from \"js-cookie\";\n\nfunction Index({\n  user,\n  postsData,\n  errorLoading\n}) {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(postsData || []);\n  const {\n    0: showToastr,\n    1: setShowToastr\n  } = useState(false);\n  const {\n    0: hasMore,\n    1: setHasMore\n  } = useState(true);\n  const {\n    0: pageNumber,\n    1: setPageNumber\n  } = useState(2);\n  useEffect(() => {\n    document.title = `Welcome, ${user.name.split(\" \")[0]}`;\n  }, []);\n  useEffect(() => {\n    showToastr && setTimeout(() => setShowToastr(false), 3000);\n  }, [showToastr]);\n\n  const fetchDataOnScroll = async () => {\n    try {\n      const res = await axios.get(`${baseUrl}/api/posts`, {\n        headers: {\n          Authorization: cookie.get(\"token\")\n        },\n        params: {\n          pageNumber\n        }\n      });\n      if (res.data.length === 0) setHasMore(false);\n      setPosts(prev => [...prev, ...res.data]);\n      setPageNumber(prev => prev + 1);\n    } catch (error) {\n      alert(\"Error fetching Posts\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showToastr && /*#__PURE__*/_jsxDEV(PostDeleteToastr, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n        user: user,\n        setPosts: setPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), posts.length === 0 || errorLoading ? /*#__PURE__*/_jsxDEV(NoPosts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        hasMore: hasMore,\n        next: fetchDataOnScroll,\n        loader: /*#__PURE__*/_jsxDEV(PlaceHolderPosts, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this),\n        endMessage: /*#__PURE__*/_jsxDEV(EndMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this),\n        dataLength: posts.length,\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(CardPost, {\n          post: post,\n          user: user,\n          setPosts: setPosts,\n          setShowToastr: setShowToastr\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nIndex.getInitialProps = async ctx => {\n  try {\n    const {\n      token\n    } = parseCookies(ctx);\n    const res = await axios.get(`${baseUrl}/api/posts`, {\n      headers: {\n        Authorization: token\n      },\n      params: {\n        pageNumber: 1\n      }\n    });\n    return {\n      postsData: res.data\n    };\n  } catch (error) {\n    return {\n      errorLoading: true\n    };\n  }\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/vsvij/Desktop/MERN Projects/social-media/pages/index.js"],"names":["React","useEffect","useState","axios","baseUrl","CreatePost","CardPost","Segment","parseCookies","NoPosts","PostDeleteToastr","InfiniteScroll","PlaceHolderPosts","EndMessage","cookie","Index","user","postsData","errorLoading","posts","setPosts","showToastr","setShowToastr","hasMore","setHasMore","pageNumber","setPageNumber","document","title","name","split","setTimeout","fetchDataOnScroll","res","get","headers","Authorization","params","data","length","prev","error","alert","map","post","_id","getInitialProps","ctx","token"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport baseUrl from \"../utils/baseUrl\";\r\nimport CreatePost from \"../components/Post/CreatePost\";\r\nimport CardPost from \"../components/Post/CardPost\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport { parseCookies } from \"nookies\";\r\nimport { NoPosts } from \"../components/Layout/NoData\";\r\nimport { PostDeleteToastr } from \"../components/Layout/Toastr\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport {\r\n  PlaceHolderPosts,\r\n  EndMessage,\r\n} from \"../components/Layout/PlaceHolderGroup\";\r\nimport cookie from \"js-cookie\";\r\n\r\nfunction Index({ user, postsData, errorLoading }) {\r\n  const [posts, setPosts] = useState(postsData || []);\r\n  const [showToastr, setShowToastr] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const [pageNumber, setPageNumber] = useState(2);\r\n\r\n  useEffect(() => {\r\n    document.title = `Welcome, ${user.name.split(\" \")[0]}`;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    showToastr && setTimeout(() => setShowToastr(false), 3000);\r\n  }, [showToastr]);\r\n\r\n  const fetchDataOnScroll = async () => {\r\n    try {\r\n      const res = await axios.get(`${baseUrl}/api/posts`, {\r\n        headers: { Authorization: cookie.get(\"token\") },\r\n        params: { pageNumber },\r\n      });\r\n\r\n      if (res.data.length === 0) setHasMore(false);\r\n\r\n      setPosts((prev) => [...prev, ...res.data]);\r\n      setPageNumber((prev) => prev + 1);\r\n    } catch (error) {\r\n      alert(\"Error fetching Posts\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showToastr && <PostDeleteToastr />}\r\n      <Segment>\r\n        <CreatePost user={user} setPosts={setPosts} />\r\n\r\n        {posts.length === 0 || errorLoading ? (\r\n          <NoPosts />\r\n        ) : (\r\n          <InfiniteScroll\r\n            hasMore={hasMore}\r\n            next={fetchDataOnScroll}\r\n            loader={<PlaceHolderPosts />}\r\n            endMessage={<EndMessage />}\r\n            dataLength={posts.length}\r\n          >\r\n            {posts.map((post) => (\r\n              <CardPost\r\n                key={post._id}\r\n                post={post}\r\n                user={user}\r\n                setPosts={setPosts}\r\n                setShowToastr={setShowToastr}\r\n              />\r\n            ))}\r\n          </InfiniteScroll>\r\n        )}\r\n      </Segment>\r\n    </>\r\n  );\r\n}\r\n\r\nIndex.getInitialProps = async (ctx) => {\r\n  try {\r\n    const { token } = parseCookies(ctx);\r\n\r\n    const res = await axios.get(`${baseUrl}/api/posts`, {\r\n      headers: { Authorization: token },\r\n      params: { pageNumber: 1 },\r\n    });\r\n\r\n    return { postsData: res.data };\r\n  } catch (error) {\r\n    return { errorLoading: true };\r\n  }\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}