{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\vsvij\\\\Desktop\\\\MERN Projects\\\\social-media\\\\components\\\\Post\\\\ImageModal.js\";\nimport React from \"react\";\nimport { Modal, Grid, Image, Card, Icon, Divider } from \"semantic-ui-react\";\nimport PostComments from \"./PostComments\";\nimport CommentInputField from \"./CommentInputField\";\nimport calculateTime from \"../../utils/calculateTime\";\nimport Link from \"next/link\";\nimport { likePost } from \"../../utils/postActions\";\nimport LikesList from \"./LikesList\";\n\nfunction ImageModal(_ref) {\n  var _this = this;\n\n  var post = _ref.post,\n      user = _ref.user,\n      setLikes = _ref.setLikes,\n      likes = _ref.likes,\n      isLiked = _ref.isLiked,\n      comments = _ref.comments,\n      setComments = _ref.setComments;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 2,\n      stackable: true,\n      relaxed: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Content, {\n          image: true,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            wrapped: true,\n            size: \"large\",\n            src: post.picUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          fluid: true,\n          children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              floated: \"left\",\n              avatar: true,\n              src: post.user.profilePicUrl\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"/\".concat(post.user.username),\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: post.user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n              children: calculateTime(post.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), post.location && /*#__PURE__*/_jsxDEV(Card.Meta, {\n              content: post.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n              style: {\n                fontSize: \"17px\",\n                letterSpacing: \"0.1px\",\n                wordSpacing: \"0.35px\"\n              },\n              children: post.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            extra: true,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: isLiked ? \"heart\" : \"heart outline\",\n              color: \"red\",\n              style: {\n                cursor: \"pointer\"\n              },\n              onClick: function onClick() {\n                return likePost(post._id, user._id, setLikes, isLiked ? false : true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LikesList, {\n              postId: post._id,\n              trigger: likes.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spanLikesList\",\n                children: \"\".concat(likes.length, \" \").concat(likes.length === 1 ? \"like\" : \"likes\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                overflow: \"auto\",\n                height: comments.length > 2 ? \"200px\" : \"60px\",\n                marginBottom: \"8px\"\n              },\n              children: comments.length > 0 && comments.map(function (comment) {\n                return /*#__PURE__*/_jsxDEV(PostComments, {\n                  comment: comment,\n                  postId: post._id,\n                  user: user,\n                  setComments: setComments\n                }, comment._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CommentInputField, {\n              postId: post._id,\n              user: user,\n              setComments: setComments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = ImageModal;\nexport default ImageModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageModal\");","map":{"version":3,"sources":["C:/Users/vsvij/Desktop/MERN Projects/social-media/components/Post/ImageModal.js"],"names":["React","Modal","Grid","Image","Card","Icon","Divider","PostComments","CommentInputField","calculateTime","Link","likePost","LikesList","ImageModal","post","user","setLikes","likes","isLiked","comments","setComments","picUrl","profilePicUrl","username","name","createdAt","location","fontSize","letterSpacing","wordSpacing","text","cursor","_id","length","overflow","height","marginBottom","map","comment"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Modal, Grid, Image, Card, Icon, Divider } from \"semantic-ui-react\";\r\nimport PostComments from \"./PostComments\";\r\nimport CommentInputField from \"./CommentInputField\";\r\nimport calculateTime from \"../../utils/calculateTime\";\r\nimport Link from \"next/link\";\r\nimport { likePost } from \"../../utils/postActions\";\r\nimport LikesList from \"./LikesList\";\r\n\r\nfunction ImageModal({\r\n  post,\r\n  user,\r\n  setLikes,\r\n  likes,\r\n  isLiked,\r\n  comments,\r\n  setComments,\r\n}) {\r\n  return (\r\n    <>\r\n      <Grid columns={2} stackable relaxed>\r\n        <Grid.Column>\r\n          <Modal.Content image>\r\n            <Image wrapped size=\"large\" src={post.picUrl} />\r\n          </Modal.Content>\r\n        </Grid.Column>\r\n\r\n        <Grid.Column>\r\n          <Card fluid>\r\n            <Card.Content>\r\n              <Image floated=\"left\" avatar src={post.user.profilePicUrl} />\r\n\r\n              <Card.Header>\r\n                <Link href={`/${post.user.username}`}>\r\n                  <a>{post.user.name}</a>\r\n                </Link>\r\n              </Card.Header>\r\n\r\n              <Card.Meta>{calculateTime(post.createdAt)}</Card.Meta>\r\n\r\n              {post.location && <Card.Meta content={post.location} />}\r\n\r\n              <Card.Description\r\n                style={{\r\n                  fontSize: \"17px\",\r\n                  letterSpacing: \"0.1px\",\r\n                  wordSpacing: \"0.35px\",\r\n                }}\r\n              >\r\n                {post.text}\r\n              </Card.Description>\r\n            </Card.Content>\r\n\r\n            <Card.Content extra>\r\n              <Icon\r\n                name={isLiked ? \"heart\" : \"heart outline\"}\r\n                color=\"red\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() =>\r\n                  likePost(post._id, user._id, setLikes, isLiked ? false : true)\r\n                }\r\n              />\r\n\r\n              <LikesList\r\n                postId={post._id}\r\n                trigger={\r\n                  likes.length > 0 && (\r\n                    <span className=\"spanLikesList\">\r\n                      {`${likes.length} ${\r\n                        likes.length === 1 ? \"like\" : \"likes\"\r\n                      }`}\r\n                    </span>\r\n                  )\r\n                }\r\n              />\r\n\r\n              <Divider hidden />\r\n\r\n              <div\r\n                style={{\r\n                  overflow: \"auto\",\r\n                  height: comments.length > 2 ? \"200px\" : \"60px\",\r\n                  marginBottom: \"8px\",\r\n                }}\r\n              >\r\n                {comments.length > 0 &&\r\n                  comments.map((comment) => (\r\n                    <PostComments\r\n                      key={comment._id}\r\n                      comment={comment}\r\n                      postId={post._id}\r\n                      user={user}\r\n                      setComments={setComments}\r\n                    />\r\n                  ))}\r\n              </div>\r\n\r\n              <CommentInputField\r\n                postId={post._id}\r\n                user={user}\r\n                setComments={setComments}\r\n              />\r\n            </Card.Content>\r\n          </Card>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImageModal;\r\n"]},"metadata":{},"sourceType":"module"}