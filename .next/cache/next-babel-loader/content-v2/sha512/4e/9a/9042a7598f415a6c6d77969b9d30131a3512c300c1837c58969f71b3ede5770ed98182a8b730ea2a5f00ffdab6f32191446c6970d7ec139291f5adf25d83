{"ast":null,"code":"import axios from \"axios\";\nimport baseUrl from \"./baseUrl\";\nimport catchErrors from \"./catchErrors\";\nimport cookie from \"js-cookie\";\nconst Axios = axios.create({\n  baseURL: `${baseUrl}/api/posts`,\n  headers: {\n    Authorization: cookie.get(\"token\")\n  }\n});\nexport const submitNewPost = async (text, location, picUrl, setPosts, setNewPost, setError) => {\n  try {\n    const res = await Axios.post(\"/\", {\n      text,\n      location,\n      picUrl\n    });\n    setPosts(prev => [res.data, ...prev]);\n    setNewPost({\n      text: \"\",\n      location: \"\"\n    });\n  } catch (error) {\n    const errorMsg = catchErrors(error);\n    setError(errorMsg);\n  }\n};\nexport const deletePost = async (postId, setPosts, setShowToastr) => {\n  try {\n    await Axios.delete(`/${postId}`);\n    setPosts(prev => prev.filter(post => post._id !== postId));\n    setShowToastr(true);\n  } catch (error) {\n    alert(catchErrors(error));\n  }\n};\nexport const likePost = async (postId, userId, setLikes, like = true) => {\n  try {\n    if (like) {\n      await Axios.post(`/like/${postId}`);\n      setLikes(prev => [...prev, {\n        user: userId\n      }]);\n    } //\n    else if (!like) {\n        await Axios.put(`/unlike/${postId}`);\n        setLikes(prev => prev.filter(like => like.user !== userId));\n      }\n  } catch (error) {\n    alert(catchErrors(error));\n  }\n};\nexport const postComment = async (postId, user, text, setComments, setText) => {\n  try {\n    const res = await Axios.post(`/comment/${postId}`, {\n      text\n    });\n    const newComment = {\n      _id: res.data,\n      user,\n      text,\n      date: Date.now()\n    };\n    setComments(prev => [newComment, ...prev]);\n    setText(\"\");\n  } catch (error) {\n    alert(catchErrors(error));\n  }\n};\nexport const deleteComment = async (postId, commentId, setComments) => {\n  try {\n    await Axios.delete(`/${postId}/${commentId}`);\n    setComments(prev => prev.filter(comment => comment._id !== commentId));\n  } catch (error) {\n    alert(catchErrors(error));\n  }\n};","map":{"version":3,"sources":["C:/Users/vsvij/Desktop/MERN Projects/social-media/utils/postActions.js"],"names":["axios","baseUrl","catchErrors","cookie","Axios","create","baseURL","headers","Authorization","get","submitNewPost","text","location","picUrl","setPosts","setNewPost","setError","res","post","prev","data","error","errorMsg","deletePost","postId","setShowToastr","delete","filter","_id","alert","likePost","userId","setLikes","like","user","put","postComment","setComments","setText","newComment","date","Date","now","deleteComment","commentId","comment"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport baseUrl from \"./baseUrl\";\r\nimport catchErrors from \"./catchErrors\";\r\nimport cookie from \"js-cookie\";\r\n\r\nconst Axios = axios.create({\r\n  baseURL: `${baseUrl}/api/posts`,\r\n  headers: { Authorization: cookie.get(\"token\") }\r\n});\r\n\r\nexport const submitNewPost = async (\r\n  text,\r\n  location,\r\n  picUrl,\r\n  setPosts,\r\n  setNewPost,\r\n  setError\r\n) => {\r\n  try {\r\n    const res = await Axios.post(\"/\", { text, location, picUrl });\r\n\r\n    setPosts(prev => [res.data, ...prev]);\r\n    setNewPost({ text: \"\", location: \"\" });\r\n  } catch (error) {\r\n    const errorMsg = catchErrors(error);\r\n    setError(errorMsg);\r\n  }\r\n};\r\n\r\nexport const deletePost = async (postId, setPosts, setShowToastr) => {\r\n  try {\r\n    await Axios.delete(`/${postId}`);\r\n    setPosts(prev => prev.filter(post => post._id !== postId));\r\n    setShowToastr(true);\r\n  } catch (error) {\r\n    alert(catchErrors(error));\r\n  }\r\n};\r\n\r\nexport const likePost = async (postId, userId, setLikes, like = true) => {\r\n  try {\r\n    if (like) {\r\n      await Axios.post(`/like/${postId}`);\r\n      setLikes(prev => [...prev, { user: userId }]);\r\n    }\r\n    //\r\n    else if (!like) {\r\n      await Axios.put(`/unlike/${postId}`);\r\n      setLikes(prev => prev.filter(like => like.user !== userId));\r\n    }\r\n  } catch (error) {\r\n    alert(catchErrors(error));\r\n  }\r\n};\r\n\r\nexport const postComment = async (postId, user, text, setComments, setText) => {\r\n  try {\r\n    const res = await Axios.post(`/comment/${postId}`, { text });\r\n\r\n    const newComment = {\r\n      _id: res.data,\r\n      user,\r\n      text,\r\n      date: Date.now()\r\n    };\r\n\r\n    setComments(prev => [newComment, ...prev]);\r\n    setText(\"\");\r\n  } catch (error) {\r\n    alert(catchErrors(error));\r\n  }\r\n};\r\n\r\nexport const deleteComment = async (postId, commentId, setComments) => {\r\n  try {\r\n    await Axios.delete(`/${postId}/${commentId}`);\r\n    setComments(prev => prev.filter(comment => comment._id !== commentId));\r\n  } catch (error) {\r\n    alert(catchErrors(error));\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}