{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\vsvij\\\\Desktop\\\\MERN Projects\\\\social-media\\\\components\\\\Post\\\\CreatePost.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useRef } from \"react\";\nimport { Form, Button, Image, Divider, Message, Icon } from \"semantic-ui-react\";\nimport uploadPic from \"../../utils/uploadPicToCloudinary\";\nimport { submitNewPost } from \"../../utils/postActions\";\n\nfunction CreatePost({\n  user,\n  setPosts\n}) {\n  const {\n    0: newPost,\n    1: setNewPost\n  } = useState({\n    text: \"\",\n    location: \"\"\n  });\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const inputRef = useRef();\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const {\n    0: highlighted,\n    1: setHighlighted\n  } = useState(false);\n  const {\n    0: media,\n    1: setMedia\n  } = useState(null);\n  const {\n    0: mediaPreview,\n    1: setMediaPreview\n  } = useState(null);\n\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n\n    if (name === \"media\") {\n      setMedia(files[0]);\n      setMediaPreview(URL.createObjectURL(files[0]));\n    }\n\n    setNewPost(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n\n  const addStyles = () => ({\n    textAlign: \"center\",\n    height: \"150px\",\n    width: \"150px\",\n    border: \"dotted\",\n    paddingTop: media === null && \"60px\",\n    cursor: \"pointer\",\n    borderColor: highlighted ? \"green\" : \"black\"\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    let picUrl;\n\n    if (media !== null) {\n      picUrl = await uploadPic(media);\n\n      if (!picUrl) {\n        setLoading(false);\n        return setError(\"Error Uploading Image\");\n      }\n    }\n\n    await submitNewPost(newPost.text, newPost.location, picUrl, setPosts, setNewPost, setError);\n    setMedia(null);\n    setMediaPreview(null);\n    setLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      error: error !== null,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Message, {\n        error: true,\n        onDismiss: () => setError(null),\n        content: error,\n        header: \"Oops!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: user.profilePicUrl,\n          circular: true,\n          avatar: true,\n          inline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n          placeholder: \"Whats Happening\",\n          name: \"text\",\n          value: newPost.text,\n          onChange: handleChange,\n          rows: 4,\n          width: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          value: newPost.location,\n          name: \"location\",\n          onChange: handleChange,\n          label: \"Add Location\",\n          icon: \"map marker alternate\",\n          placeholder: \"Want to add Location?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          onChange: handleChange,\n          name: \"media\",\n          style: {\n            display: \"none\"\n          },\n          type: \"file\",\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => inputRef.current.click(),\n        style: addStyles(),\n        onDragOver: e => {\n          e.preventDefault();\n          setHighlighted(true);\n        },\n        onDragLeave: e => {\n          e.preventDefault();\n          setHighlighted(false);\n        },\n        onDrop: e => {\n          e.preventDefault();\n          setHighlighted(true);\n          const droppedFile = Array.from(e.dataTransfer.files);\n          setMedia(droppedFile[0]);\n          setMediaPreview(URL.createObjectURL(droppedFile[0]));\n        },\n        children: media === null ? /*#__PURE__*/_jsxDEV(Icon, {\n          name: \"plus\",\n          size: \"big\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            style: {\n              height: \"150px\",\n              width: \"150px\"\n            },\n            src: mediaPreview,\n            alt: \"PostImage\",\n            centered: true,\n            size: \"medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        circular: true,\n        disabled: newPost.text === \"\" || loading,\n        content: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 20\n        }, this),\n        style: {\n          backgroundColor: \"#1DA1F2\",\n          color: \"white\"\n        },\n        icon: \"send\",\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default CreatePost;","map":{"version":3,"sources":["C:/Users/vsvij/Desktop/MERN Projects/social-media/components/Post/CreatePost.js"],"names":["React","useState","useRef","Form","Button","Image","Divider","Message","Icon","uploadPic","submitNewPost","CreatePost","user","setPosts","newPost","setNewPost","text","location","loading","setLoading","inputRef","error","setError","highlighted","setHighlighted","media","setMedia","mediaPreview","setMediaPreview","handleChange","e","name","value","files","target","URL","createObjectURL","prev","addStyles","textAlign","height","width","border","paddingTop","cursor","borderColor","handleSubmit","preventDefault","picUrl","profilePicUrl","display","current","click","droppedFile","Array","from","dataTransfer","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Form, Button, Image, Divider, Message, Icon } from \"semantic-ui-react\";\r\nimport uploadPic from \"../../utils/uploadPicToCloudinary\";\r\nimport { submitNewPost } from \"../../utils/postActions\";\r\n\r\nfunction CreatePost({ user, setPosts }) {\r\n  const [newPost, setNewPost] = useState({ text: \"\", location: \"\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const inputRef = useRef();\r\n\r\n  const [error, setError] = useState(null);\r\n  const [highlighted, setHighlighted] = useState(false);\r\n\r\n  const [media, setMedia] = useState(null);\r\n  const [mediaPreview, setMediaPreview] = useState(null);\r\n\r\n  const handleChange = e => {\r\n    const { name, value, files } = e.target;\r\n\r\n    if (name === \"media\") {\r\n      setMedia(files[0]);\r\n      setMediaPreview(URL.createObjectURL(files[0]));\r\n    }\r\n\r\n    setNewPost(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const addStyles = () => ({\r\n    textAlign: \"center\",\r\n    height: \"150px\",\r\n    width: \"150px\",\r\n    border: \"dotted\",\r\n    paddingTop: media === null && \"60px\",\r\n    cursor: \"pointer\",\r\n    borderColor: highlighted ? \"green\" : \"black\"\r\n  });\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    let picUrl;\r\n\r\n    if (media !== null) {\r\n      picUrl = await uploadPic(media);\r\n      if (!picUrl) {\r\n        setLoading(false);\r\n        return setError(\"Error Uploading Image\");\r\n      }\r\n    }\r\n\r\n    await submitNewPost(\r\n      newPost.text,\r\n      newPost.location,\r\n      picUrl,\r\n      setPosts,\r\n      setNewPost,\r\n      setError\r\n    );\r\n\r\n    setMedia(null);\r\n    setMediaPreview(null);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form error={error !== null} onSubmit={handleSubmit}>\r\n        <Message\r\n          error\r\n          onDismiss={() => setError(null)}\r\n          content={error}\r\n          header=\"Oops!\"\r\n        />\r\n\r\n        <Form.Group>\r\n          <Image src={user.profilePicUrl} circular avatar inline />\r\n          <Form.TextArea\r\n            placeholder=\"Whats Happening\"\r\n            name=\"text\"\r\n            value={newPost.text}\r\n            onChange={handleChange}\r\n            rows={4}\r\n            width={14}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Input\r\n            value={newPost.location}\r\n            name=\"location\"\r\n            onChange={handleChange}\r\n            label=\"Add Location\"\r\n            icon=\"map marker alternate\"\r\n            placeholder=\"Want to add Location?\"\r\n          />\r\n\r\n          <input\r\n            ref={inputRef}\r\n            onChange={handleChange}\r\n            name=\"media\"\r\n            style={{ display: \"none\" }}\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n          />\r\n        </Form.Group>\r\n\r\n        <div\r\n          onClick={() => inputRef.current.click()}\r\n          style={addStyles()}\r\n          onDragOver={e => {\r\n            e.preventDefault();\r\n            setHighlighted(true);\r\n          }}\r\n          onDragLeave={e => {\r\n            e.preventDefault();\r\n            setHighlighted(false);\r\n          }}\r\n          onDrop={e => {\r\n            e.preventDefault();\r\n            setHighlighted(true);\r\n\r\n            const droppedFile = Array.from(e.dataTransfer.files);\r\n\r\n            setMedia(droppedFile[0]);\r\n            setMediaPreview(URL.createObjectURL(droppedFile[0]));\r\n          }}>\r\n          {media === null ? (\r\n            <Icon name=\"plus\" size=\"big\" />\r\n          ) : (\r\n            <>\r\n              <Image\r\n                style={{ height: \"150px\", width: \"150px\" }}\r\n                src={mediaPreview}\r\n                alt=\"PostImage\"\r\n                centered\r\n                size=\"medium\"\r\n              />\r\n            </>\r\n          )}\r\n        </div>\r\n        <Divider hidden />\r\n\r\n        <Button\r\n          circular\r\n          disabled={newPost.text === \"\" || loading}\r\n          content={<strong>Post</strong>}\r\n          style={{ backgroundColor: \"#1DA1F2\", color: \"white\" }}\r\n          icon=\"send\"\r\n          loading={loading}\r\n        />\r\n      </Form>\r\n      <Divider />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n"]},"metadata":{},"sourceType":"module"}